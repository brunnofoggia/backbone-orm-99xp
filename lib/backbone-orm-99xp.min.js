/**
* @license
* backbone-orm 99xp
* ----------------------------------
* v0.6.0
*
* Copyright (c)2020 Bruno Foggia, 99xp.
* Distributed under MIT license
*
* https://backbone-orm.99xp.org
*/
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("underscore-99xp"),require("backbone"),require("validate-99xp")):"function"==typeof define&&define.amd?define(["exports","underscore-99xp","backbone","validate-99xp"],t):t((e=e||self).BackboneORM={},e._,e.Backbone,e.v)}(this,function(e,t,i,r){"use strict";t=t&&t.hasOwnProperty("default")?t.default:t,i=i&&i.hasOwnProperty("default")?i.default:i,r=r&&r.hasOwnProperty("default")?r.default:r;var n={},s={preinitialize(){this.setEntity()},setEntity(){var e=t.result(this,"entityDefinition")||n.error("Entity Definition not found"),i=this.getConnection();return this.entity=i.isDefined(e[0])?i.model(e[0]):i.define(e[0],e[1]||{},e[2]||{})},getConnection(){return t.result(this,"conn")||t.result(n,"conn")||n.error("Database connection not set")},sync(e,i,r){return i.trigger("request",e,i,r),this["sync"+t.capitalize(e)](e,i,r)},syncRead(e,t,i){var r={};if(this.id?r[this.idAttribute]=this.id:r=this.attributes,r)return this.entity.findOne({where:r}).then(e=>(e=>{i.success(e.dataValues)})(e)).catch(e=>(e=>{i.error(e)})(e))},syncCreate(e,i,r){var n=t.omit(this.attributes,this.idAttribute);return this.entity.create(n).then(e=>(e=>{var t={};t[i.idAttribute]=e.null,r.success(t)})(e)).catch(e=>(e=>{var t=[];for(let i in e.errors)t.push(e.errors[i].message);r.error([t,e])})(e))},syncUpdate(e,i,r){var n=t.omit(this.attributes,this.idAttribute),s={where:t.pick(this.attributes,this.idAttribute)};return this.entity.update(n,s).then(e=>(e=>{r.success(e[0])})(e)).catch(e=>(e=>{var t=[];for(let i in e.errors)t.push(e.errors[i].message);r.error([t,e])})(e))},syncPatch(e,t,i){return this.syncUpdate(e,t,i)},validations:(e,t)=>({}),validationErrors(e){this._res.status(400).send({title:"Invalid Data",errors:e})},once(e,r){return t.isArray(e)&&t.isArray(r)&&(this.once(e[0],t.partial(function(e,i){this.off(i[0],i[1]);var r=t.clone(arguments);delete r[0],delete r[1],e[1].apply(null,r)},e,r)),this.once(r[0],t.partial(function(e,t){this.off(e[0],e[1]);var i=arguments;delete i[0],delete i[1],t[1].apply(null,i)},e,r))),t.bind(i.Model.prototype.once,this)(e,r)}};n.Model=i.Model.extend(t.extend(t.clone(r),s));var o={preinitialize(){this.setModelBase(),this.setEntity()},setModelBase(){var e=this.model?this.model:n.Model.extend();this.modelBase=new e},setEntity(){var e=t.result(this,"entityDefinition")||t.result(this.modelBase,"entityDefinition")||n.error("Entity Definition not found"),i=this.getConnection();return this.entity=i.isDefined(e[0])?i.model(e[0]):i.define(e[0],e[1]||{},e[2]||{})},getConnection(){return t.result(this,"conn")||t.result(this.modelBase,"conn")||t.result(n,"conn")||n.error("Database connection not set")},parse(e,i,r){t.isArray(e)&&t.size(e)>0&&this.add(t.map(e,e=>e.dataValues)),i(this)},findAll(e={},t,i){return this.entity.findAll({where:e}).then(e=>this.parse(e,t,i)).catch(e=>i(e))},saveAll(e,t){var i=this.models.length,r=()=>{--i>0||e(this)};for(var n in this.models){var s=this.models[n];s.once(["sync",r],["error",t]),s.save()}}};n.Collection=i.Collection.extend(o),n.error=function(e){throw new Error(e)},e.default=n,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=backbone-orm-99xp.min.js.map
