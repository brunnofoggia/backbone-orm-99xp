{"version":3,"file":"backbone-api-99xp.min.js","sources":["../src/backbone-api-99xp.js"],"sourcesContent":["// Micro Service integrator plus advanced validation, formatting and control over proccess possibilities\n\n\n// CODE DOCUMENTED BELOW\n// --------------\n\n// --------------\n\n// Baseline setup\n// --------------\nimport _ from 'underscore-99xp';\nimport v from 'validate-99xp';\nimport BackboneRequest from 'backbone-request-99xp';\n\nvar BackboneApi = {};\n\n// Extended Functionallity for Models and Collections\nvar extended = {\n    // not meant to be used. will be used on setting api methods like POST or PUT\n    idAttribute: '_id',\n    auth: false,\n    tokenField: 'accessToken',\n    // list of methods available in the api and their configuration (paths, validations)\n    methods: {\n        //        auth: {\n        //            public: true,\n        //            path: '/a/b',\n        //            validations: {},\n        //            data: {\n        //                user: '',\n        //                pass: '',\n        //            },\n        ////            method: {}, if I dont set it, it will use a generic one\n        //            \n        //        },\n        //        _sample: Sample\n        //        _sample: {\n        //            path: '/a/b',\n        //            validations: {}\n        //        }\n    },\n    //  default method applying JWT Auth\n    //  might be necessary to overwrite it\n    setAuthHeader(o) {\n        if (!this.tokenField) {\n            return BackboneApi.dataError('tokenField is not set');\n        }\n        o.headers.Authorization = 'Bearer ' + this.data[this.auth][this.tokenField];\n\n        return o;\n    },\n    initialize(p, o = {}) {\n        this.setRouterParameters(o.req, o.res);\n        this.options = _.defaults(_.omit(o, 'req', 'res'), {\n            autoexec: true\n        });\n        this.data = {};\n\n        typeof this.options.method === 'string' && (this.options.method = [this.options.method]);\n        this.options.autoexec && this.execAll();\n    },\n    execAll() {\n        !this._methodsExecution && (this._methodsExecution = _.clone(this.options.method));\n        if (_.size(this._methodsExecution) === 0) {\n            this._methodsExecution = null;\n            _.bind(this.options.success, this)();\n            return;\n        }\n        //        \n        var method = this._methodsExecution.shift();\n\n        this.exec(method, () => this.execAll(), this.options.error);\n    },\n    exec(method, success, error) {\n        //        !method && (method = this.options.method);\n\n        var methodData = this.methodData(method);\n\n        var vErr = this.validate(this.getMethodInput(methodData), {\n            methodData: methodData\n        });\n        if (vErr !== null) {\n            return this.validationErrors(vErr);\n        }\n\n        var fn = _.bind(this.callApi, this),\n            calledFn = _.partial(fn, method, methodData, success, error);\n        // if there's no authorization needed fn is called\n        if (methodData.public) {\n            return calledFn();\n        } else if (!this.auth) {\n            return BackboneApi.dataError(`method \"${method}\" is not set as public but auth is not set`);\n        }\n\n        return this.exec(this.auth, calledFn);\n    },\n    // used to call api and trigger callbacks accordingly\n    callApi(method, methodData, success, error) {\n        this.setApiCall(methodData);\n\n        var o = {\n            method: methodData.method,\n            data: this.getMethodInput(methodData),\n            headers: _.result2(methodData, 'headers', {}, [methodData], this)\n        };\n        if (!methodData.public) {\n            o = this.setAuthHeader(o);\n        }\n\n        var before = _.bind(typeof methodData.before === 'function' ? methodData.before : (c, _o) => {\n                c(_o);\n            }, this),\n            save = _.bind(_.partial((_method, _methodData, _success, _error, _o) => {\n                this.listenToOnce(this, 'sync', _.bind(() => {\n                    this.data[_method] = this.attributes;\n                    this.attributes = {};\n\n                    try {\n                        typeof _methodData.success === 'function' && _.bind(_methodData.success, this)(_o, this._req.body, _methodData);\n                        typeof _success === 'function' && _.bind(_success, this)(_o, this._req.body, _methodData);\n                    } catch (e) {\n                        // console.error('Internal Failure');\n                        // console.error(e);\n                        this._res.status(500).send({\n                            message: 'Internal Failure'\n                        });\n                    }\n                }, this));\n                this.listenToOnce(this, 'error', _.bind(() => {\n                    // !this._reqErr.response && console.error('Internal Failure');\n                    try {\n                        typeof _methodData.error === 'function' && _.bind(_methodData.error, this)(this._reqErr.response, _o, this._req.body, _methodData);\n                        typeof _error === 'function' ? _.bind(_error, this)(this._reqErr.response || null, _o, this._req.body, _methodData) : \n                            !this._res._headerSent && this._res.status(this._reqErr.response ? this._reqErr.response.status : 500).send(this._reqErr.response ? this._reqErr.response.data : null);\n                    } catch (e) {\n                        // console.error('Internal Failure');\n                        // console.error(e);\n                        this._res.status(500).send({\n                            message: 'Internal Failure'\n                        });\n                    }\n                }, this));\n\n                this.save(null, _o);\n            }, method, methodData, success, error), this);\n\n        try {\n            before(save, o);\n        } catch (e) {\n            // console.error('Internal Failure');\n            // console.log(e);\n            this._res.status(500).send({\n                message: 'Internal Failure'\n            });\n        }\n    },\n    test: false,\n    // getter for methods data. ensure data for method asked is set\n    methodData(method) {\n        if (!method || !_.result(this, 'methods')[method]) {\n            return BackboneApi.dataError('Make sure you\\'ve set your method and it\\'s data');\n        }\n\n        var methodData = _.result(this, 'methods')[method] || {};\n\n        if (!methodData.path) {\n            BackboneApi.dataError('Make sure you\\'ve set a path for method ' + method + '\\'');\n        }\n\n        methodData = this.setHttpMethod(methodData);\n\n        return methodData;\n    },\n    // get HTTP method from method configuration. if needed set a default HTTP method accordingly to method data input\n    setHttpMethod(methodData) {\n        var data = this.getMethodInput(methodData);\n        methodData = _.defaults(methodData, {\n            method: (typeof data === 'object' && _.size(data) > 0 ? 'POST' : 'GET')\n        });\n        methodData.method = methodData.method.toUpperCase();\n\n        return methodData;\n    },\n    // get \"data\" from method configuration (can be an object or function) or req.body instead\n    getMethodInput(methodData) {\n        return _.result2(methodData, 'data', this._req.body || {}, [_.clone(this._req.body), methodData], this);\n    },\n    // replaces common behavior of backbone to ensure no id nonwanted will be added in Api URLs\n    url() {\n        return _.result(this, 'urlRoot') ||\n            _.result(this.collection, 'url') ||\n            BackboneApi.urlError();\n    },\n    // set asked method data for the request to be executed\n    setApiCall(methodData) {\n        this.setApiUrl(methodData.path, methodData);\n    },\n    // merge urlHost with the correct path for method asked. also render path as a template to make possible having attributes on it\n    setApiUrl(path, methodData) {\n        var host = _.result(this, 'urlHost') || BackboneApi.urlError(1),\n            data = _.extend({}, _.clone(this.data), {\n                _model: this,\n                _input: this.getMethodInput(methodData),\n                _params: this._req.params\n            }),\n            pathfix = new RegExp('((?<!\\:)\\/{1,})', 'g');\n\n        path = _.template(path)(data);\n\n        return this.urlRoot = [host, path].join('/').replace(pathfix, '/');\n    },\n    sync(method, model, options) {\n        method = methodMap[options.method];\n        var args = [method, model, options];\n        return BackboneRequest.sync.apply(this, args);\n    },\n    validations(a, o) {\n        var vl = _.result2(o.methodData, 'validations', {}, [a, o], this);\n        return vl;\n    },\n    _validate() {\n        return true;\n    },\n    validationErrors(err) {\n        this._res.status(400).send({\n            title: 'Invalid Data',\n            errors: err\n        });\n    },\n    setRouterParameters(req, res) {\n        if (!req || !res) {\n            BackboneApi.dataError('Initialize requires an object with req and res (express route variables) within');\n        }\n\n        this._req = req;\n        this._res = res;\n    },\n};\n\n_.map(['Model', 'Collection'], (x) => {\n    BackboneApi[x] = BackboneRequest[x].extend(_.extend(_.clone(v), extended));\n});\n\n// Throw an error when a URL is needed, and none is supplied.\nBackboneApi.urlError = function(code) {\n    if (code === 2) {\n        BackboneApi.dataError('A \"path\" property must be specified in methods list for the current method');\n    }\n    BackboneApi.dataError('A \"urlHost\" property or function must be specified');\n};\n\n// Throw an error when some DATA is needed, and none is supplied.\nBackboneApi.dataError = function(msg) {\n    throw new Error(msg);\n};\n\n// Map from CRUD to HTTP for our default `Backbone.sync` implementation.\nvar methodMap = {\n    'POST': 'create',\n    'PUT': 'update',\n    'PATCH': 'patch',\n    'DELETE': 'delete',\n    'GET': 'read'\n};\n\n\nexport default BackboneApi;\n"],"names":["BackboneApi","extended","idAttribute","auth","tokenField","methods","setAuthHeader","o","this","headers","Authorization","data","dataError","initialize","p","setRouterParameters","req","res","options","_","defaults","omit","autoexec","method","execAll","_methodsExecution","clone","size","bind","success","shift","exec","error","methodData","vErr","validate","getMethodInput","validationErrors","fn","callApi","calledFn","partial","public","setApiCall","result2","before","c","_o","save","_method","_methodData","_success","_error","listenToOnce","attributes","_req","body","e","_res","status","send","message","_reqErr","response","_headerSent","test","result","path","setHttpMethod","toUpperCase","url","collection","urlError","setApiUrl","host","extend","_model","_input","_params","params","pathfix","RegExp","template","urlRoot","join","replace","sync","model","args","methodMap","BackboneRequest","apply","validations","a","_validate","err","title","errors","map","x","v","code","msg","Error"],"mappings":"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"}