{"version":3,"file":"backbone-orm-99xp.min.js","sources":["../src/backbone-orm-99xp.js"],"sourcesContent":["//Backbone ORM is result of fusion between [backbone](https://backbonejs.org) and \n//[sequelize](https://sequelize.org/) to provide a set of functionalities for business models integrated to ORM.\n// It includes an integration to provide full featured validations with [validate-99xp](https://github.com/brunnofoggia/validate-99xp)\n\n\n// Instructions\n// --------------\n\n// The array entityDefinition may have 2 or 3 items. Same options would've been passed to sequelize.define\n//  1. model name\n//  2. model definition\n//  3. model options\n\n// Before using models it's mandatory that BackboneORM receives Sequelize connection.\n// A good option would be openning a connection before your router were triggered\n\n//     BackboneORM.conn = connection\n\n// Example\n// --------------\n\n//     const EntityDefinition = ['test', {\n//         /* table columns */\n//         id: {\n//             type: Sequelize.INTEGER,\n//             primaryKey: true\n//         },\n//         name: Sequelize.STRING,\n//         age: Sequelize.INTEGER\n//     }, {\n//         freezeTableName: true, timestamps: false,\n//     }];\n//\n//     export default bborm.Model.extend({\n//         entityDefinition: EntityDefinition,\n//         validations: {\n//             \"age\": [[v8n().minLength(1).maxLength(3), 'Invalid Age']]\n//         },\n//     });\n\n// CODE DOCUMENTED BELOW\n// --------------\n\n// --------------\n\n// Baseline setup\n// --------------\nimport _ from 'underscore-99xp';\nimport Backbone from 'backbone';\nimport v from 'validate-99xp';\n\nvar BackboneORM = {};\n\nvar extended = {\n    _migration: {alter: true},\n    migration() {\n        var canMigrate = _.result(this, 'canMigrate');\n        if (!canMigrate) {\n            return false;\n        }\n        return this._migration;\n    },\n    syncMigration() {\n        var migration = _.result(this, 'migration');\n        if (!migration) {\n            return;\n        }\n        migration === true && (migration = {});\n\n        return this.entity.sync(migration);\n    },\n};\n\n// Extended Functionallity for Models and Collections\nvar extendedModel = {\n    // Pré set entity into model instance\n    preinitialize() {\n        this.setEntity();\n    },\n    // Load an instance of given class\n    setEntity() {\n        var o = _.result(this, 'entityDefinition') || (BackboneORM.error('Entity Definition not found')),\n            conn = this.getConnection();\n\n        this.entity = conn.isDefined(o[0]) ?\n            conn.model(o[0]) :\n            conn.define(o[0], o[1] || {}, o[2] || {});\n\n        return this.entity;\n    },\n    // Retrives connection object from this.conn or BackboneORM.conn\n    getConnection() {\n        return _.result(this, 'conn') || _.result(BackboneORM, 'conn') || (BackboneORM.error('Database connection not set'));\n    },\n    // Customization that redirect calls accordingly to the method asked (read, create, update, patch, delete)\n    sync(method, model, o) {\n        model.trigger('request', method, model, o);\n        return this['sync' + _.capitalize(method)](method, model, o);\n    },\n    // Get row\n    syncRead(method, model, o) {\n        // callbacks for success or error. They trigger Backbone default ones\n        var success = r => {\n            o.success(r.dataValues);\n        };\n\n        // build where\n        var data = {};\n        if (this.id) {\n            data[this.idAttribute] = this.id;\n        } else {\n            data = this.attributes;\n        }\n\n        // no where no select because this is a model not a collection\n        if (!data) {\n            return;\n        }\n\n        // run select\n        return this.entity.findOne({\n            where: data\n        }).then(r => success(r)).catch(_.bind(this.handleSyncError, this));\n    },\n    // Insert row\n    syncCreate(method, model, o) {\n        // callbacks for success or error. They trigger Backbone default ones\n        var success = (r) => {\n            var a = {};\n            /*var a = r.dataValues;*/\n            a[model.idAttribute] = r['null'];\n            o.success(a);\n        };\n\n        // remove pk from attributes that will be updated\n        var attrs = _.omit(this.attributes, this.idAttribute);\n        // run insert\n        return this.entity.create(attrs)\n            .then(r => success(r))\n            .catch(_.bind(this.handleSyncError, this));\n    },\n    // Update row\n    syncUpdate(method, model, o) {\n        // callbacks for success or error. They trigger Backbone default ones\n        var success = (r) => {\n            o.success(r[0]);\n        };\n\n        // remove pk from attributes that will be updated\n        var attrs = _.omit(this.attributes, this.idAttribute);\n        // build where\n        var _o = {\n            where: _.pick(this.attributes, this.idAttribute)\n        };\n        // run update\n        return this.entity.update(attrs, _o)\n            .then(r => success(r))\n            .catch(_.bind(this.handleSyncError, this));\n    },\n    // Patch row\n    syncPatch(method, model, o) {\n        return this.syncUpdate(method, model, o);\n    },\n    // Handle Sync Errors\n    handleSyncError(e) {\n        var errors = [];\n\n        if (_.isArray(e.errors)) {\n            for (let x in e.errors) {\n                errors.push(e.errors[x].message);\n            }\n        } else {\n            errors.push(e.message || e);\n        }\n        this.trigger('error', e, errors);\n    },\n    // Validations list. See [validate-99xp](https://github.com/brunnofoggia/validate-99xp)\n    validations(attrs, options) {\n        return {};\n    },\n    // Dispatcher of validation errors\n    validationErrors(err) {\n        this._res.status(400).send({\n            title: 'Invalid Data',\n            errors: err\n        });\n    },\n    // Allows to set a pair of listeners where one turns the other off after being executed.\n    // Both parameters are arrays composed like [event, callback]\n    once(c1, c2) {\n        if (_.isArray(c1) && _.isArray(c2)) {\n            this.once(c1[0], _.partial(function (c1, c2) {\n                this.off(c2[0], c2[1]);\n                \n                var args = _.toArray(arguments);\n                args.shift();args.shift();\n\n                c1[1].apply(null, args);\n            }, c1, c2));\n\n            this.once(c2[0], _.partial(function (c1, c2) {\n                this.off(c1[0], c1[1]);\n        \n                var args = _.toArray(arguments);\n                args.shift();args.shift();\n\n                c2[1].apply(null, args);\n            }, c1, c2));\n        }\n\n        return _.bind(Backbone.Model.prototype.once, this)(c1, c2);\n    }\n};\n\n// Extension of Backbone.Model added to custom behaviors\nBackboneORM.Model = Backbone.Model.extend(_.extend(_.clone(v), extended, extendedModel));\n\nvar extendedCollection = {\n    // Pré set entity into collection instance\n    preinitialize() {\n        this.setModelBase();\n        this.setEntity();\n    },\n    setModelBase() {\n        var ModelBase = (this.model ? this.model : BackboneORM.Model.extend());\n        this.modelBase = new ModelBase;\n    },\n    // Load an instance of given class\n    setEntity() {\n        var o = _.result(this, 'entityDefinition') || _.result(this.modelBase, 'entityDefinition') || BackboneORM.error('Entity Definition not found'),\n            conn = this.getConnection();\n\n        this.entity = conn.isDefined(o[0]) ? conn.model(o[0]) : conn.define(o[0], o[1] || {}, o[2] || {});\n        return this.entity;\n    },\n    // Retrives connection object from this.conn or BackboneORM.conn\n    getConnection() {\n        return _.result(this, 'conn') || _.result(this.modelBase, 'conn') || _.result(BackboneORM, 'conn') || BackboneORM.error('Database connection not set');\n    },\n    // Transform sequelize rows into models\n    parse(r, sc, ec) {\n        if (_.isArray(r) && _.size(r) > 0) {\n            this.add(_.map(r, (row) => {\n                return (row.dataValues);\n            }));\n        }\n\n        sc(this);\n    },\n    // find all records accordingly to the conditions\n    findAll(where = {}, sc, ec) {\n        typeof ec !== 'function' && (ec = () => { });\n\n        return this.entity.findAll({\n            where: where\n        }).then(r => this.parse(r, sc, ec)).catch(err => ec(err));\n    },\n    // Save all models\n    saveAll(sc, ec) {\n        var size = this.models.length,\n            c = () => {\n                if (--size > 0) { return; }\n                typeof sc === 'function' && sc(this);\n            };\n\n        typeof ec !== 'function' && (ec = () => { });\n\n        for (var x in this.models) {\n            var m = this.models[x];\n            m.once(['sync', c], ['error', ec]);\n            m.save();\n        }\n    }\n};\n\nBackboneORM.Collection = Backbone.Collection.extend(_.extend({}, extended, extendedCollection));\n\n\nBackboneORM.error = function (msg) {\n    throw new Error(msg);\n};\n\nexport default BackboneORM;\n"],"names":["BackboneORM","extended","_migration","alter","migration","_","result","this","syncMigration","entity","sync","extendedModel","preinitialize","setEntity","o","error","conn","getConnection","isDefined","model","define","method","trigger","capitalize","syncRead","data","id","idAttribute","attributes","findOne","where","then","r","success","dataValues","catch","bind","handleSyncError","syncCreate","attrs","omit","create","a","syncUpdate","_o","pick","update","syncPatch","e","errors","isArray","x","push","message","validations","options","validationErrors","err","_res","status","send","title","once","c1","c2","partial","off","args","toArray","arguments","shift","apply","Backbone","Model","prototype","extend","clone","v","extendedCollection","setModelBase","ModelBase","modelBase","parse","sc","ec","size","add","map","row","findAll","saveAll","models","length","c","m","save","Collection","msg","Error"],"mappings":";;;;;;;;;;;6dAmDA,IAAIA,EAAc,GAEdC,EAAW,CACXC,WAAY,CAACC,OAAO,GACpBC,oBACqBC,EAAEC,OAAOC,KAAM,eAIzBA,KAAKL,YAEhBM,oBACQJ,EAAYC,EAAEC,OAAOC,KAAM,gBAC1BH,SAGS,IAAdA,IAAuBA,EAAY,IAE5BG,KAAKE,OAAOC,KAAKN,KAK5BO,EAAgB,CAEhBC,qBACSC,aAGTA,gBACQC,EAAIT,EAAEC,OAAOC,KAAM,qBAAwBP,EAAYe,MAAM,+BAC7DC,EAAOT,KAAKU,4BAEXR,OAASO,EAAKE,UAAUJ,EAAE,IAC3BE,EAAKG,MAAML,EAAE,IACbE,EAAKI,OAAON,EAAE,GAAIA,EAAE,IAAM,GAAIA,EAAE,IAAM,IAEnCP,KAAKE,QAGhBQ,uBACWZ,EAAEC,OAAOC,KAAM,SAAWF,EAAEC,OAAON,EAAa,SAAYA,EAAYe,MAAM,gCAGzFL,KAAKW,EAAQF,EAAOL,UAChBK,EAAMG,QAAQ,UAAWD,EAAQF,EAAOL,GACjCP,KAAK,OAASF,EAAEkB,WAAWF,IAASA,EAAQF,EAAOL,IAG9DU,SAASH,EAAQF,EAAOL,OAOhBW,EAAO,MACPlB,KAAKmB,GACLD,EAAKlB,KAAKoB,aAAepB,KAAKmB,GAE9BD,EAAOlB,KAAKqB,WAIXH,SAKElB,KAAKE,OAAOoB,QAAQ,CACvBC,MAAOL,IACRM,KAAKC,GApBMA,CAAAA,IACVlB,EAAEmB,QAAQD,EAAEE,aAmBHD,CAAQD,IAAIG,MAAM9B,EAAE+B,KAAK7B,KAAK8B,gBAAiB9B,QAGhE+B,WAAWjB,EAAQF,EAAOL,OAUlByB,EAAQlC,EAAEmC,KAAKjC,KAAKqB,WAAYrB,KAAKoB,oBAElCpB,KAAKE,OAAOgC,OAAOF,GACrBR,KAAKC,GAXKA,CAAAA,QACPU,EAAI,GAERA,EAAEvB,EAAMQ,aAAeK,EAAC,KACxBlB,EAAEmB,QAAQS,IAOCT,CAAQD,IAClBG,MAAM9B,EAAE+B,KAAK7B,KAAK8B,gBAAiB9B,QAG5CoC,WAAWtB,EAAQF,EAAOL,OAOlByB,EAAQlC,EAAEmC,KAAKjC,KAAKqB,WAAYrB,KAAKoB,aAErCiB,EAAK,CACLd,MAAOzB,EAAEwC,KAAKtC,KAAKqB,WAAYrB,KAAKoB,qBAGjCpB,KAAKE,OAAOqC,OAAOP,EAAOK,GAC5Bb,KAAKC,GAZKA,CAAAA,IACXlB,EAAEmB,QAAQD,EAAE,KAWDC,CAAQD,IAClBG,MAAM9B,EAAE+B,KAAK7B,KAAK8B,gBAAiB9B,QAG5CwC,UAAU1B,EAAQF,EAAOL,UACdP,KAAKoC,WAAWtB,EAAQF,EAAOL,IAG1CuB,gBAAgBW,OACRC,EAAS,MAET5C,EAAE6C,QAAQF,EAAEC,YACP,IAAIE,KAAKH,EAAEC,OACZA,EAAOG,KAAKJ,EAAEC,OAAOE,GAAGE,cAG5BJ,EAAOG,KAAKJ,EAAEK,SAAWL,QAExB1B,QAAQ,QAAS0B,EAAGC,IAG7BK,YAAW,CAACf,EAAOgB,KACR,IAGXC,iBAAiBC,QACRC,KAAKC,OAAO,KAAKC,KAAK,CACvBC,MAAO,eACPZ,OAAQQ,KAKhBK,KAAKC,EAAIC,UACD3D,EAAE6C,QAAQa,IAAO1D,EAAE6C,QAAQc,UACtBF,KAAKC,EAAG,GAAI1D,EAAE4D,QAAQ,SAAUF,EAAIC,QAChCE,IAAIF,EAAG,GAAIA,EAAG,QAEfG,EAAO9D,EAAE+D,QAAQC,WACrBF,EAAKG,QAAQH,EAAKG,QAElBP,EAAG,GAAGQ,MAAM,KAAMJ,IACnBJ,EAAIC,SAEFF,KAAKE,EAAG,GAAI3D,EAAE4D,QAAQ,SAAUF,EAAIC,QAChCE,IAAIH,EAAG,GAAIA,EAAG,QAEfI,EAAO9D,EAAE+D,QAAQC,WACrBF,EAAKG,QAAQH,EAAKG,QAElBN,EAAG,GAAGO,MAAM,KAAMJ,IACnBJ,EAAIC,KAGJ3D,EAAE+B,KAAKoC,EAASC,MAAMC,UAAUZ,KAAMvD,KAAtCF,CAA4C0D,EAAIC,KAK/DhE,EAAYyE,MAAQD,EAASC,MAAME,OAAOtE,EAAEsE,OAAOtE,EAAEuE,MAAMC,GAAI5E,EAAUU,IAEzE,IAAImE,EAAqB,CAErBlE,qBACSmE,oBACAlE,aAETkE,mBACQC,EAAazE,KAAKY,MAAQZ,KAAKY,MAAQnB,EAAYyE,MAAME,cACxDM,UAAY,IAAID,GAGzBnE,gBACQC,EAAIT,EAAEC,OAAOC,KAAM,qBAAuBF,EAAEC,OAAOC,KAAK0E,UAAW,qBAAuBjF,EAAYe,MAAM,+BAC5GC,EAAOT,KAAKU,4BAEXR,OAASO,EAAKE,UAAUJ,EAAE,IAAME,EAAKG,MAAML,EAAE,IAAME,EAAKI,OAAON,EAAE,GAAIA,EAAE,IAAM,GAAIA,EAAE,IAAM,IACvFP,KAAKE,QAGhBQ,uBACWZ,EAAEC,OAAOC,KAAM,SAAWF,EAAEC,OAAOC,KAAK0E,UAAW,SAAW5E,EAAEC,OAAON,EAAa,SAAWA,EAAYe,MAAM,gCAG5HmE,MAAMlD,EAAGmD,EAAIC,GACL/E,EAAE6C,QAAQlB,IAAM3B,EAAEgF,KAAKrD,GAAK,QACvBsD,IAAIjF,EAAEkF,IAAIvD,EAAIwD,GACPA,EAAItD,aAIpBiD,EAAG5E,OAGPkF,QAAQ3D,EAAQ,GAAIqD,EAAIC,SACN,mBAAPA,IAAsBA,EAAK,UAE3B7E,KAAKE,OAAOgF,QAAQ,CACvB3D,MAAOA,IACRC,KAAKC,GAAKzB,KAAK2E,MAAMlD,EAAGmD,EAAIC,IAAKjD,MAAMsB,GAAO2B,EAAG3B,KAGxDiC,QAAQP,EAAIC,OACJC,EAAO9E,KAAKoF,OAAOC,OACnBC,EAAI,OACMR,EAAO,GACC,mBAAPF,GAAqBA,EAAG5E,WAKlC,IAAI4C,IAFK,mBAAPiC,IAAsBA,EAAK,UAEpB7E,KAAKoF,OAAQ,KACnBG,EAAIvF,KAAKoF,OAAOxC,GACpB2C,EAAEhC,KAAK,CAAC,OAAQ+B,GAAI,CAAC,QAAST,IAC9BU,EAAEC,UAKd/F,EAAYgG,WAAaxB,EAASwB,WAAWrB,OAAOtE,EAAEsE,OAAO,GAAI1E,EAAU6E,IAG3E9E,EAAYe,MAAQ,SAAUkF,SACpB,IAAIC,MAAMD"}