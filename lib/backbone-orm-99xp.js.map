{"version":3,"file":"backbone-orm-99xp.js","sources":["../src/backbone-orm-99xp.js"],"sourcesContent":["//Backbone ORM is result of fusion between [backbone](https://backbonejs.org) and\n//[sequelize](https://sequelize.org/) to provide a set of functionalities for business models integrated to ORM.\n// It includes an integration to provide full featured validations with [validate-99xp](https://github.com/brunnofoggia/validate-99xp)\n\n// Instructions\n// --------------\n\n// The array entityDefinition may have 2 or 3 items. Same options would've been passed to sequelize.define\n//  1. model name\n//  2. model definition\n//  3. model options\n\n// Before using models it's mandatory that BackboneORM receives Sequelize connection.\n// A good option would be openning a connection before your router were triggered\n\n//     BackboneORM.conn = connection\n\n// Example\n// --------------\n\n//     const EntityDefinition = ['test', {\n//         /* table columns */\n//         id: {\n//             type: Sequelize.INTEGER,\n//             primaryKey: true\n//         },\n//         name: Sequelize.STRING,\n//         age: Sequelize.INTEGER\n//     }, {\n//         freezeTableName: true, timestamps: false,\n//     }];\n//\n//     export default bborm.Model.extend({\n//         entityDefinition: EntityDefinition,\n//         validations: {\n//             \"age\": [[v8n().minLength(1).maxLength(3), 'Invalid Age']]\n//         },\n//     });\n\n// CODE DOCUMENTED BELOW\n// --------------\n\n// --------------\n\n// Baseline setup\n// --------------\nimport _ from \"underscore-99xp\";\nimport Backbone from \"backbone\";\nimport bbx from \"backbone-99xp\";\nimport v from \"validate-99xp\";\nimport AppException from \"app-exception\";\n\nvar BackboneORM = {};\n\nvar extended = {\n    _migration: { alter: true },\n    migration() {\n        var canMigrate = _.result(this, \"canMigrate\");\n        if (!canMigrate) {\n            return false;\n        }\n        return this._migration;\n    },\n    syncMigration() {\n        var migration = _.result(this, \"migration\");\n        if (!migration) {\n            return;\n        }\n        migration === true && (migration = {});\n\n        return this.entity.sync(migration);\n    },\n    defineEntity(definition) {\n        var o,\n            conn = this.getConnection();\n        switch (true) {\n            case _.isArray(definition):\n                o = conn.isDefined(definition[0])\n                    ? conn.model(definition[0])\n                    : conn.define(\n                          definition[0],\n                          definition[1] || {},\n                          definition[2] || {}\n                      );\n                break;\n            case typeof definition === \"function\":\n                o = definition.sequelize ? definition : definition();\n                break;\n        }\n        return o;\n    },\n};\n\n// Extended Functionallity for Models and Collections\nvar extendedModel = {\n    // Pré set entity into model instance\n    preinitialize() {\n        this.setEntity();\n    },\n    // Load an instance of given class\n    setEntity() {\n        if (this.entity) {\n            return this.entity;\n        }\n\n        var o =\n            _.result(this, \"entityDefinition\") ||\n            BackboneORM.error(\"Entity Definition not found\");\n        this.entity = this.defineEntity(o);\n\n        return this.entity;\n    },\n    // Retrives connection object from this.conn or BackboneORM.conn\n    getConnection() {\n        return (\n            _.result(this, \"conn\") ||\n            _.result(BackboneORM, \"conn\") ||\n            BackboneORM.error(\"Database connection not set\")\n        );\n    },\n    // Customization that redirect calls accordingly to the method asked (read, create, update, patch, delete)\n    sync(method, model, o) {\n        model.trigger(\"request\", method, model, o);\n        return this[\"sync\" + _.capitalize(method)](method, model, o);\n    },\n    // Get row\n    syncRead(method, model, o) {\n        // callbacks for success or error. They trigger Backbone default ones\n        var success = (r) => {\n            o.success(r.dataValues);\n        };\n\n        // build where\n        var data = {};\n        if (this.id) {\n            data[this.idAttribute] = this.id;\n        } else {\n            data = this.attributes;\n        }\n\n        // no where no select because this is a model not a collection\n        if (!data) {\n            return;\n        }\n\n        // run select\n        return this.entity\n            .findOne({\n                where: data,\n                order: [[this.idAttribute, \"DESC\"]],\n            })\n            .then((r) => {\n                this.formatMe();\n                success(r);\n            })\n            .catch(_.bind(this.handleSyncError, this));\n    },\n    // Insert row\n    syncCreate(method, model, o) {\n        // callbacks for success or error. They trigger Backbone default ones\n        var success = (r) => {\n            var a = {};\n            a[model.idAttribute] = r.dataValues[model.idAttribute];\n            o.success(a);\n        };\n\n        // remove pk from attributes that will be updated\n        var attrs = this.unformat(\n            _.omit(_.clone(this.attributes), this.idAttribute)\n        );\n        // run insert\n        return this.entity\n            .create(attrs)\n            .then((r) => success(r))\n            .catch(_.bind(this.handleSyncError, this));\n    },\n    // Update row\n    syncUpdate(method, model, o) {\n        // callbacks for success or error. They trigger Backbone default ones\n        var success = (r) => {\n            o.success(r[0]);\n        };\n\n        // remove pk from attributes that will be updated\n        var attrs = this.unformat(\n            _.omit(_.clone(this.attributes), this.idAttribute)\n        );\n        // build where\n        var _o = {\n            where: _.pick(this.attributes, this.idAttribute),\n        };\n        // run update\n        return this.entity\n            .update(attrs, _o)\n            .then((r) => success(r))\n            .catch(_.bind(this.handleSyncError, this));\n    },\n    // Patch row\n    syncPatch(method, model, o) {\n        return this.syncUpdate(method, model, o);\n    },\n    // Handle Sync Errors\n    handleSyncError(e) {\n        var errors = [];\n\n        if (_.isArray(e.errors)) {\n            for (let x in e.errors) {\n                errors.push(e.errors[x].message);\n            }\n        } else {\n            errors.push(e.message || e);\n        }\n        this.trigger(\"error\", e, errors);\n    },\n    // Validations list. See [validate-99xp](https://github.com/brunnofoggia/validate-99xp)\n    validations(attrs, options) {\n        return {};\n    },\n    // Dispatcher of validation errors\n    validationErrors(err) {\n        return BackboneORM.error(\n            {\n                title: \"Invalid Data\",\n                errors: err,\n            },\n            0,\n            400\n        );\n    },\n    // Allows to set a pair of listeners where one turns the other off after being executed.\n    // Both parameters are arrays composed like [event, callback]\n    once(c1, c2) {\n        if (_.isArray(c1) && _.isArray(c2)) {\n            this.once(\n                c1[0],\n                _.partial(\n                    function (c1, c2) {\n                        this.off(c2[0], c2[1]);\n\n                        var args = _.toArray(arguments);\n                        args.shift();\n                        args.shift();\n\n                        c1[1].apply(null, args);\n                    },\n                    c1,\n                    c2\n                )\n            );\n\n            this.once(\n                c2[0],\n                _.partial(\n                    function (c1, c2) {\n                        this.off(c1[0], c1[1]);\n\n                        var args = _.toArray(arguments);\n                        args.shift();\n                        args.shift();\n\n                        c2[1].apply(null, args);\n                    },\n                    c1,\n                    c2\n                )\n            );\n        }\n\n        return _.bind(Backbone.Model.prototype.once, this)(c1, c2);\n    },\n    save() {\n        return new Promise((resolve, reject) => {\n            this.once(\n                [\n                    \"sync\",\n                    () => {\n                        resolve(this);\n                    },\n                ],\n                [\n                    \"error\",\n                    (err) => {\n                        reject(err);\n                    },\n                ]\n            );\n\n            _.bind(bbx.model.prototype.save, this)();\n        });\n    },\n};\n\n// Extension of Backbone.Model added to custom behaviors\nBackboneORM.Model = bbx.model.extend(\n    _.extend(_.clone(v), extended, extendedModel)\n);\n\nvar extendedCollection = {\n    // Pré set entity into collection instance\n    preinitialize() {\n        this.setModelBase();\n        this.setEntity();\n    },\n    setModelBase() {\n        var ModelBase = this.model ? this.model : BackboneORM.Model.extend();\n        this.modelBase = new ModelBase();\n    },\n    // Load an instance of given class\n    setEntity() {\n        if (this.entity) {\n            return this.entity;\n        }\n\n        var o =\n            _.result(this, \"entityDefinition\") ||\n            _.result(this.modelBase, \"entityDefinition\") ||\n            BackboneORM.error(\"Entity Definition not found\");\n        this.entity = this.defineEntity(o);\n\n        return this.entity;\n    },\n    // Retrives connection object from this.conn or BackboneORM.conn\n    getConnection() {\n        return (\n            _.result(this, \"conn\") ||\n            _.result(this.modelBase, \"conn\") ||\n            _.result(BackboneORM, \"conn\") ||\n            BackboneORM.error(\"Database connection not set\")\n        );\n    },\n    // Transform sequelize rows into models\n    parse(r) {\n        if (_.isArray(r) && _.size(r) > 0) {\n            this.add(\n                _.map(r, (row) => {\n                    return row.dataValues;\n                })\n            );\n        }\n    },\n    // find all records accordingly to the conditions\n    findAll(where = {}) {\n        return new Promise((resolve, reject) => {\n            return this.entity\n                .findAll({\n                    where: where,\n                })\n                .then((r) => {\n                    this.parse(r);\n                    this.formatModels();\n                    resolve(this);\n                })\n                .catch((err) => {\n                    reject(err);\n                });\n        });\n    },\n    // Save all models\n    saveAll() {\n        return new Promise((resolve, reject) => {\n            var size = this.models.length,\n                c = () => {\n                    if (--size > 0) {\n                        return;\n                    }\n                    // resolve after save all models\n                    resolve(this);\n                };\n\n            // validate all models first\n            var errors = [];\n            for (let x in this.models) {\n                var validate = this.models[x].validate(this.model.attributes, {\n                    validateAll: true,\n                });\n                if (validate) {\n                    errors = errors.concat(validate);\n                }\n            }\n            if (errors.length) {\n                reject(errors);\n            }\n\n            // save each model\n            for (let x in this.models) {\n                var m = this.models[x];\n                m.save()\n                    .then(() => c())\n                    .catch((err) => {\n                        reject(err);\n                    });\n            }\n        });\n    },\n};\n\nBackboneORM.Collection = bbx.collection.extend(\n    _.extend({}, extended, extendedCollection)\n);\n\nBackboneORM.error = function (msg, code = 0, status = 500) {\n    throw new AppException(msg, code, status);\n};\n\nexport default BackboneORM;\n"],"names":["BackboneORM","extended","_migration","alter","migration","canMigrate","_","result","syncMigration","entity","sync","defineEntity","definition","o","conn","getConnection","isArray","isDefined","model","define","sequelize","extendedModel","preinitialize","setEntity","error","method","trigger","capitalize","syncRead","success","r","dataValues","data","id","idAttribute","attributes","findOne","where","order","then","formatMe","catch","bind","handleSyncError","syncCreate","a","attrs","unformat","omit","clone","create","syncUpdate","_o","pick","update","syncPatch","e","errors","x","push","message","validations","options","validationErrors","err","title","once","c1","c2","partial","off","args","toArray","arguments","shift","apply","Backbone","Model","prototype","save","Promise","resolve","reject","bbx","extend","v","extendedCollection","setModelBase","ModelBase","modelBase","parse","size","add","map","row","findAll","formatModels","saveAll","models","length","c","validate","validateAll","concat","m","Collection","collection","msg","code","status","AppException"],"mappings":"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"}