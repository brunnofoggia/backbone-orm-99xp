{"version":3,"file":"backbone-orm-99xp.js","sources":["../src/backbone-orm-99xp.js"],"sourcesContent":["//Backbone ORM is result of fusion between [backbone](https://backbonejs.org) and \n//[sequelize](https://sequelize.org/) to provide a set of functionalities for business models integrated to ORM.\n// It includes an integration to provide full featured validations with [validate-99xp](https://github.com/brunnofoggia/validate-99xp)\n\n\n// Instructions\n// --------------\n\n// The array entityDefinition may have 2 or 3 items. Same options would've been passed to sequelize.define\n//  1. model name\n//  2. model definition\n//  3. model options\n\n// Before using models it's mandatory that BackboneORM receives Sequelize connection.\n// A good option would be openning a connection before your router were triggered\n\n//     BackboneORM.conn = connection\n\n// Example\n// --------------\n\n//     const EntityDefinition = ['test', {\n//         /* table columns */\n//         id: {\n//             type: Sequelize.INTEGER,\n//             primaryKey: true\n//         },\n//         name: Sequelize.STRING,\n//         age: Sequelize.INTEGER\n//     }, {\n//         freezeTableName: true, timestamps: false,\n//     }];\n//\n//     export default bborm.Model.extend({\n//         entityDefinition: EntityDefinition,\n//         validations: {\n//             \"age\": [[v8n().minLength(1).maxLength(3), 'Invalid Age']]\n//         },\n//     });\n\n// CODE DOCUMENTED BELOW\n// --------------\n\n// --------------\n\n// Baseline setup\n// --------------\nimport _ from 'underscore-99xp';\nimport Backbone from 'backbone';\nimport v from 'validate-99xp';\n\nvar BackboneORM = {};\n\n// Extended Functionallity for Models and Collections\nvar extendedModel = {\n    // PrÃ© set entity into model instance\n    preinitialize() {\n        this.setEntity();\n    },\n    // Load an instance of given class\n    setEntity() {\n        var o = _.result(this, 'entityDefinition') || (BackboneORM.error('Entity Definition not found')),\n            conn = this.getConnection();\n\n        return this.entity = conn.isDefined(o[0]) ?\n            conn.model(o[0]) :\n            conn.define(o[0], o[1] || {}, o[2] || {});\n    },\n    // Retrives connection object from this.conn or BackboneORM.conn\n    getConnection() {\n        return _.result(this, 'conn') || _.result(BackboneORM, 'conn') || (BackboneORM.error('Database connection not set'));\n    },\n    // Customization that redirect calls accordingly to the method asked (read, create, update, patch, delete)\n    sync(method, model, o) {\n        model.trigger('request', method, model, o);\n        return this['sync' + _.capitalize(method)](method, model, o);\n    },\n    // Get row\n    syncRead(method, model, o) {\n        // callbacks for success or error. They trigger Backbone default ones\n        var success = r => {\n            o.success(r.dataValues);\n        };\n        var error = err => {\n            o.error(err);\n        };\n\n        // build where\n        var data = {};\n        if (this.id) {\n            data[this.idAttribute] = this.id;\n        } else {\n            data = this.attributes;\n        }\n\n        // no where no select because this is a model not a collection\n        if (!data) {\n            return;\n        }\n\n        // run select\n        return this.entity.findOne({\n            where: data\n        }).then(r => success(r)).catch(err => error(err));\n    },\n    // Insert row\n    syncCreate(method, model, o) {\n        // callbacks for success or error. They trigger Backbone default ones\n        var success = (r) => {\n            var a = {};\n            /*var a = r.dataValues;*/\n            a[model.idAttribute] = r['null'];\n            o.success(a);\n        };\n        var error = (e) => {\n            var errors = [];\n            for (let x in e.errors) {\n                errors.push(e.errors[x].message);\n            }\n\n            o.error([errors, e]);\n        };\n\n        // remove pk from attributes that will be updated\n        var attrs = _.omit(this.attributes, this.idAttribute);\n        // run insert\n        return this.entity.create(attrs)\n            .then(r => success(r))\n            .catch(e => error(e));\n    },\n    // Update row\n    syncUpdate(method, model, o) {\n        // callbacks for success or error. They trigger Backbone default ones\n        var success = (r) => {\n            o.success(r[0]);\n        };\n        var error = (e) => {\n            var errors = [];\n            for (let x in e.errors) {\n                errors.push(e.errors[x].message);\n            }\n\n            o.error([errors, e]);\n        };\n\n        // remove pk from attributes that will be updated\n        var attrs = _.omit(this.attributes, this.idAttribute);\n        // build where\n        var _o = {\n            where: _.pick(this.attributes, this.idAttribute)\n        };\n        // run update\n        return this.entity.update(attrs, _o)\n            .then(r => success(r))\n            .catch(e => error(e));\n    },\n    // Patch row\n    syncPatch(method, model, o) {\n        return this.syncUpdate(method, model, o);\n    },\n    // Validations list. See [validate-99xp](https://github.com/brunnofoggia/validate-99xp)\n    validations(attrs, options) {\n        return {};\n    },\n    // Dispatcher of validation errors\n    validationErrors(err) {\n        this._res.status(400).send({\n            title: 'Invalid Data',\n            errors: err\n        });\n    }\n};\n\n// Extension of Backbone.Model added to custom behaviors\nBackboneORM.Model = Backbone.Model.extend(_.extend(_.clone(v), extendedModel));\n\nBackboneORM.error = function(msg) {\n    throw new Error(msg);\n};\n\nexport default BackboneORM;\n"],"names":["BackboneORM","extendedModel","preinitialize","setEntity","o","_","result","error","conn","getConnection","entity","isDefined","model","define","sync","method","trigger","capitalize","syncRead","success","r","dataValues","err","data","id","idAttribute","attributes","findOne","where","then","catch","syncCreate","a","e","errors","x","push","message","attrs","omit","create","syncUpdate","_o","pick","update","syncPatch","validations","options","validationErrors","_res","status","send","title","Model","Backbone","extend","clone","v","msg","Error"],"mappings":"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"}